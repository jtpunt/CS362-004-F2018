        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// whoseTurn
        -:    2:#include "dominion.h"
        -:    3:#include "dominion_helpers.h"
        -:    4:#include "unittestHelper.h"
        -:    5:#include "rngs.h"
        -:    6:#include <string.h>
        -:    7:#include <stdio.h>
        -:    8:#include <math.h>
        -:    9:#include <stdlib.h>
        -:   10:#include <stdbool.h>
        -:   11:#define TESTS 3
function main called 1 returned 100% blocks executed 100%
        1:   12:int main(int argc, char** argv)	{
        -:   13:	struct gameState A, B, C;
        1:   14:	int k[10] = {adventurer, gardens, minion, village, embargo, mine, cutpurse, baron, tribute, smithy};
        1:   15:	printf("Testing whoseTurn Function\n");
call    0 returned 100%
        1:   16:	initializeGame(2, k, 4, &A);
call    0 returned 100%
        1:   17:	initializeGame(2, k, 4, &B);
call    0 returned 100%
        1:   18:	initializeGame(2, k, 4, &C);
call    0 returned 100%
        -:   19:	// tests 1-3 see if the program can properly keep track of whose turn it currently is in the game
        1:   20:	bool results[TESTS] = {assertTrue("whoseTurn - A", A.whoseTurn, whoseTurn(&A)), assertTrue("whoseTurn - B", B.whoseTurn, whoseTurn(&B)), assertTrue("whoseTurn - C", C.whoseTurn, whoseTurn(&C))};
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
        1:   21:	printFinalResult(results, TESTS);
call    0 returned 100%
        1:   22:	return 0;
        -:   23:}
        -:   24:
